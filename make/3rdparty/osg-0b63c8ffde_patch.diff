diff --git a/CMakeLists.txt b/CMakeLists.txt
index f7bb7fb..e43a8c0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -180,7 +180,7 @@ IF(APPLE)
     STRING(REPLACE "." ";" MACOS_VERSION_LIST ${OSG_OSX_SDK_NAME})
     LIST(GET MACOS_VERSION_LIST 0 MACOS_VERSION_MAJOR)
     LIST(GET MACOS_VERSION_LIST 1 MACOS_VERSION_MINOR)
-    LIST(GET MACOS_VERSION_LIST 2 MACOS_VERSION_PATCH)
+    #LIST(GET MACOS_VERSION_LIST 2 MACOS_VERSION_PATCH)
 
     SET(OSG_OSX_SDK_NAME "macosx${MACOS_VERSION_MAJOR}.${MACOS_VERSION_MINOR}")
 
diff --git a/src/osg/Program.cpp b/src/osg/Program.cpp
index 6014f9e..672a7c5 100644
--- a/src/osg/Program.cpp
+++ b/src/osg/Program.cpp
@@ -504,7 +504,7 @@ void Program::apply( osg::State& state ) const
         ++itr)
     {
         const State::DefineStack& ds = itr->second;
-        OSG_NOTICE<<"  define ["<<itr->first<<"] ds.changed="<<ds.changed<<" ";
+        // OSG_NOTICE<<"  define ["<<itr->first<<"] ds.changed="<<ds.changed<<" ";
         if (ds.defineVec.empty())
         {
             OSG_NOTICE<<" DefineStack empty "<<std::endl;
diff --git a/src/osg/Shader.cpp b/src/osg/Shader.cpp
index d3101e7..4e76301 100644
--- a/src/osg/Shader.cpp
+++ b/src/osg/Shader.cpp
@@ -729,7 +729,7 @@ void Shader::PerContextShader::detachShader(GLuint program) const
 
 void Shader::_parseShaderDefines(const std::string& str, ShaderDefines& defines)
 {
-    OSG_NOTICE<<"Shader::_parseShaderDefines("<<str<<")"<<std::endl;
+    // OSG_NOTICE<<"Shader::_parseShaderDefines("<<str<<")"<<std::endl;
     std::string::size_type start_of_parameter = 0;
     do
     {
@@ -754,7 +754,7 @@ void Shader::_parseShaderDefines(const std::string& str, ShaderDefines& defines)
         {
             std::string parameter = str.substr(start_of_parameter, end_of_parameter-start_of_parameter);
             defines.insert(parameter);
-            OSG_NOTICE<<"   defines.insert("<<parameter<<")"<<std::endl;
+            // OSG_NOTICE<<"   defines.insert("<<parameter<<")"<<std::endl;
         }
 
         start_of_parameter = end_of_parameter+1;
@@ -779,7 +779,7 @@ void Shader::_computeShaderDefines()
         std::string::size_type eol = _shaderSource.find_first_of("\n\r", pos);
         if (eol==std::string::npos) eol = _shaderSource.size();
 
-        OSG_NOTICE<<"\nFound pragma line ["<<_shaderSource.substr(first_chararcter, eol-first_chararcter)<<"]"<<std::endl;
+        // OSG_NOTICE<<"\nFound pragma line ["<<_shaderSource.substr(first_chararcter, eol-first_chararcter)<<"]"<<std::endl;
 
         if (first_chararcter<eol)
         {
@@ -797,7 +797,7 @@ void Shader::_computeShaderDefines()
                 if (keyword == "import_defines") _parseShaderDefines(str, _shaderDefines);
                 else if (keyword == "requires") _parseShaderDefines(str, _shaderRequirements);
                 else {
-                    //OSG_NOTICE<<"  keyword not matched ["<<keyword<<"]"<<std::endl;
+                    // OSG_NOTICE<<"  keyword not matched ["<<keyword<<"]"<<std::endl;
                     _parseShaderDefines(str, _shaderDefines);
                 }
 #if 1
@@ -805,14 +805,14 @@ void Shader::_computeShaderDefines()
                     itr != _shaderDefines.end();
                     ++itr)
                 {
-                    OSG_NOTICE<<"      define ["<<*itr<<"]"<<std::endl;
+                    // OSG_NOTICE<<"      define ["<<*itr<<"]"<<std::endl;
                 }
 
                 for(ShaderDefines::iterator itr = _shaderRequirements.begin();
                     itr != _shaderRequirements.end();
                     ++itr)
                 {
-                    OSG_NOTICE<<"      requirements ["<<*itr<<"]"<<std::endl;
+                    // OSG_NOTICE<<"      requirements ["<<*itr<<"]"<<std::endl;
                 }
 #endif
 
